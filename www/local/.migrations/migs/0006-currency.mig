<?php

    if(file_exists("../common.php"))
            require_once("../common.php");


    /**
     * Добавление валюты "балл" и отображение товаров в этой валюте
     */
    class currency_init extends Migration{
        function Run(){
            
            //Код валюты балл
            $currency_code = "BAL";
            
            // Получаем полный список валют
            CModule::IncludeModule("catalog");
            // К сожалению этот метод не умеет фильтры вовода, поэтому получаем весь
            $res = CCurrency::GetList();
            // И засовываем в массив
            $currencies = array();
            while($row = $res->GetNext()){
                $currencies[$row["CURRENCY"]] = $row;
                // Снимаем флаг "Базовая валюта"
                CCurrency::Update($row["CURRENCY"],array("BASE"=>"N"));
            }
            
            // Параметры валюты
            $main_info = array(
                // трехсимвольный код валюты (обязательный);
                "CURRENCY"=>$currency_code  ,
                // количество единиц валюты по-умолчанию, которое учавствует в задании курса валюты (например, если 10 Датских крон стоят 48.7 рублей, то 10 - это количество единиц);
                "AMOUNT_CNT"=>"1"  ,  
                // курс валюты по-умолчанию (одна из валют сайта должна иметь курс 1, она называется базовой, остальные валюты имеют курс относительно базовой валюты);
                "AMOUNT"=>"1"  , 
                // порядок сортировки; 
                "SORT"=>"1"  ,  
                // трехзначный цифровой код валюты;
                "NUMCODE"=>"999"  ,  
                //  флаг (Y/N) является ли валюта базовой (если для добавляемой валюты указано Y и в системе уже есть некоторая базовая валюта, то флаг с существующей валюты будет снят и AMOUNT у базовой валюты станет равен 1);
                "BASE"=>"Y"  , 
                // ID пользователя, добавившего валюту;
                "CREATED_BY"=>"1"  ,
                // ID последнего пользователя, изменившего валюту.
                "MODIFIED_BY"=>"1", 
                // Полное название валюты
            );
              
            $aux_info = array(
                // Полное название валюты
                "FULL_NAME"=>"Балл",
                // Строковый формат валюты
                "FORMAT_STRING"=>"# б.",
                // Язык
                "LID"=>"ru",
                // Число знаков после запятой
                "DECIMALS"=>0,
                // Код валюте (BAL)
                "CURRENCY"=>$currency_code
            );
            
            // Если валюты Балл нет - добавляем
            if(!isset($currencies[$currency_code])){
                CCurrency::Add($main_info);
                CCurrencyLang::Add($aux_info);            
            }
            // Иначе - обновляем 
            else{
                CCurrency::Update($currency_code,$main_info);
                CCurrencyLang::Update($currency_code, "ru", $aux_info);            
            }
            
            
            // Получаем все торговые предложения и меняем у всех валюту цены на баллы
            return true;
        }
        
    }
    
    
// Запускаем миграцию    
$currency_init = new currency_init();
// Откатываем, если неудачно
if(!$currency_init->Run())$currency_init->RollBack();
